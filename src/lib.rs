// lib.rs - main library

#![cfg_attr(docsrs, feature(doc_cfg))]
//! The library to generate CNF (Conjunctive Normal Form) formulas.
//!
//! This library provides simple CNF writer, structures to create boolean formula from
//! boolean expressions and integer expressions. The module `writer` provides
//! basic types, traits to handle clauses and literals, simple the CNF writer to write
//! same CNF formulas. The `boolexpr` module provides structure to construct boolean
//! expressions. The `intexpr` and `dynintexpr` modules provides structure and traits to
//! construct integer expressions.
//!
//! Same construction of expressions can be done in natural way by using operators or
//! methods. The object called `ExprCreator` holds all expressions. The main structures
//! that allow construct expressions are expression nodes: `BoolExprNode`, `IntExprNode`
//! and `DynIntExprNode`. BoolExprNode allow to construct boolean expressions.
//! `IntExprNode` and `DynIntExprNode` allow to construct integer expressions or multiple
//! bit expressions.
//!
//! Samples of usage of these modules can be found in documentation of these modules.
//!
//! Typical usage of this library is: construction boolean expression and write it by using
//! method `write` from an expression object. The `writer` module can be used to write
//! 'raw' CNF formulas that can be generated by other software.

#![allow(unused_imports)]

pub use gateutil::gatesim;

pub mod gate;
pub use gate::{Literal, VarLit};

pub mod boolexpr;
pub mod boolexpr_creator;
pub mod boolvar;

pub mod dynintexpr;
pub mod dynintvar;
mod int_utils;
pub mod intexpr;
mod intmacros;
pub mod intvar;

pub use generic_array;

pub use gateutil;
